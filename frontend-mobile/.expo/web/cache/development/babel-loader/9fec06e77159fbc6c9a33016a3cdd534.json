{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\work\\\\stophack\\\\frontend-mobile\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Navigation from \"./Navigation\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      groups = _useState2[0],\n      setGroups = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupsSelected = _useState4[0],\n      setGroupsSelected = _useState4[1];\n\n  function getGroups() {\n    var response, data;\n    return _regeneratorRuntime.async(function getGroups$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://stophack.herokuapp.com/api/wordgroups'));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            setGroups(data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getGroups();\n  }, []);\n\n  function selectGroup(id) {\n    var alreadySelected = groupsSelected.findIndex(function (item) {\n      return item === id;\n    });\n    console.log(\"AAAAAAAAAAAAAAAAAA\");\n\n    if (alreadySelected >= 0) {\n      var filteredItems = groupsSelected.filter(function (item) {\n        return item !== id;\n      });\n      setGroupsSelected(filteredItems);\n    } else {\n      setGroupsSelected([].concat(_toConsumableArray(groupsSelected), [id]));\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    barStyle: \"dark-content\",\n    backgroundColor: '#fff',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Navigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/work/stophack/frontend-mobile/src/index.js"],"names":["React","useState","useEffect","NavigationContainer","Navigation","App","groups","setGroups","groupsSelected","setGroupsSelected","getGroups","fetch","response","json","data","selectGroup","id","alreadySelected","findIndex","item","console","log","filteredItems","filter"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAIA,OAAOC,UAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAEAJ,QAAQ,CAAC,EAAD,CAFR;AAAA;AAAA,MAErBK,MAFqB;AAAA,MAEbC,SAFa;;AAAA,mBAGgBN,QAAQ,CAAC,EAAD,CAHxB;AAAA;AAAA,MAGrBO,cAHqB;AAAA,MAGLC,iBAHK;;AAK5B,WAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACyBC,KAAK,CAAC,+CAAD,CAD9B;;AAAA;AACQC,YAAAA,QADR;AAAA;AAAA,6CAEqBA,QAAQ,CAACC,IAAT,EAFrB;;AAAA;AAEQC,YAAAA,IAFR;AAGEP,YAAAA,SAAS,CAACO,IAAD,CAAT;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAZ,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASK,WAAT,CAAqBC,EAArB,EAAyB;AACvB,QAAMC,eAAe,GAAGT,cAAc,CAACU,SAAf,CAAyB,UAAAC,IAAI;AAAA,aAAIA,IAAI,KAAKH,EAAb;AAAA,KAA7B,CAAxB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AAEA,QAAIJ,eAAe,IAAI,CAAvB,EAA0B;AACtB,UAAMK,aAAa,GAAGd,cAAc,CAACe,MAAf,CAAsB,UAAAJ,IAAI;AAAA,eAAIA,IAAI,KAAKH,EAAb;AAAA,OAA1B,CAAtB;AACAP,MAAAA,iBAAiB,CAACa,aAAD,CAAjB;AACH,KAHD,MAGO;AACHb,MAAAA,iBAAiB,8BAAKD,cAAL,IAAqBQ,EAArB,GAAjB;AACH;AACJ;;AAEC,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,cAApB;AAAmC,IAAA,eAAe,EAAE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF;AAQD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nimport { StatusBar } from 'react-native';\r\n\r\nimport Navigation from './Navigation';\r\n\r\nexport default function App() {\r\n\r\n  const [groups, setGroups] = useState([]);\r\n  const [groupsSelected, setGroupsSelected] = useState([]);\r\n\r\n  async function getGroups() {\r\n    const response = await fetch('https://stophack.herokuapp.com/api/wordgroups');\r\n    const data = await response.json();\r\n    setGroups(data);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getGroups();\r\n  }, []);\r\n\r\n  function selectGroup(id) {\r\n    const alreadySelected = groupsSelected.findIndex(item => item === id);\r\n\r\n    console.log(\"AAAAAAAAAAAAAAAAAA\");\r\n\r\n    if (alreadySelected >= 0) {\r\n        const filteredItems = groupsSelected.filter(item => item !== id);\r\n        setGroupsSelected(filteredItems);\r\n    } else {\r\n        setGroupsSelected([...groupsSelected, id]);\r\n    }\r\n}\r\n\r\n  return (\r\n    <>\r\n      <StatusBar barStyle=\"dark-content\" backgroundColor={'#fff'} />\r\n      <NavigationContainer>\r\n        <Navigation></Navigation>\r\n      </NavigationContainer>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}