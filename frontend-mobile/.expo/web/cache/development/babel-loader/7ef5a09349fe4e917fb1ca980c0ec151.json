{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\work\\\\stophack\\\\frontend-mobile\\\\src\\\\screens\\\\Home\\\\index.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from 'axios';\nimport { MaterialCommunityIcons, AntDesign, Ionicons } from '@expo/vector-icons';\nimport { Wrapper, Header, Container, Logo, Nav, NavItem, NoConnection, Group, Title, ScrollGroups, Form, TextInput, Result, Label, Word } from \"./styles\";\nimport logo from \"../../images/Netflix-logo2.png\";\nimport { Divider } from 'react-native-elements';\nexport default function Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      groups = _useState2[0],\n      setGroups = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupsSelected = _useState4[0],\n      setGroupsSelected = _useState4[1];\n\n  function getGroups() {\n    var response, data;\n    return _regeneratorRuntime.async(function getGroups$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://stophack.herokuapp.com/api/wordgroups'));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            setGroups(data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getGroups();\n  }, []);\n\n  function selectGroup(id) {\n    var alreadySelected = groupsSelected.findIndex(function (item) {\n      return item === id;\n    });\n    console.log(\"Selected\");\n\n    if (alreadySelected >= 0) {\n      var filteredItems = groupsSelected.filter(function (item) {\n        return item !== id;\n      });\n      setGroupsSelected(filteredItems);\n    } else {\n      setGroupsSelected([].concat(_toConsumableArray(groupsSelected), [id]));\n    }\n  }\n\n  function hack(letter) {\n    axios.post(\"https://stophack.herokuapp.com/api/hack\", {\n      wordGroups: groupsSelected,\n      letter: letter\n    }).then(function (res) {\n      console.log(res);\n      var results = res.data.map(function (item) {});\n    });\n  }\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Montar jogo\"), React.createElement(Ionicons, {\n    name: \"md-car\",\n    size: 32,\n    color: \"#999\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), React.createElement(ScrollGroups, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, groups.map(function (group) {\n    return React.createElement(Group, {\n      check: groupsSelected.includes(group._id),\n      onPress: function onPress() {\n        return selectGroup(group._id);\n      },\n      key: group._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 130\n      }\n    }, group.label));\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return hack('a');\n    },\n    title: \"Buscar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), React.createElement(ScrollGroups, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, React.createElement(Result, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, \"a\"), React.createElement(Word, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 45\n    }\n  }, \"b\")))));\n}","map":{"version":3,"sources":["D:/work/stophack/frontend-mobile/src/screens/Home/index.js"],"names":["React","Component","useEffect","useState","axios","MaterialCommunityIcons","AntDesign","Ionicons","Wrapper","Header","Container","Logo","Nav","NavItem","NoConnection","Group","Title","ScrollGroups","Form","TextInput","Result","Label","Word","logo","Divider","Home","groups","setGroups","groupsSelected","setGroupsSelected","getGroups","fetch","response","json","data","selectGroup","id","alreadySelected","findIndex","item","console","log","filteredItems","filter","hack","letter","post","wordGroups","then","res","results","map","group","includes","_id","label"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport { Text, View, CheckBox, Button } from 'react-native';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { MaterialCommunityIcons, AntDesign, Ionicons } from '@expo/vector-icons';\r\n\r\nimport { \r\n    Wrapper, \r\n    Header, \r\n    Container, \r\n    Logo, \r\n    Nav, \r\n    NavItem, \r\n    NoConnection, \r\n    Group, \r\n    Title, \r\n    ScrollGroups, \r\n    Form, \r\n    TextInput, \r\n    Result,\r\n    Label,\r\n    Word\r\n} from './styles';\r\n\r\nimport logo from '../../images/Netflix-logo2.png';\r\nimport { Divider } from 'react-native-elements';\r\n\r\nexport default function Home() {\r\n\r\n    const [groups, setGroups] = useState([]);\r\n    const [groupsSelected, setGroupsSelected] = useState([]);\r\n\r\n    async function getGroups() {\r\n        const response = await fetch('https://stophack.herokuapp.com/api/wordgroups');\r\n        const data = await response.json();\r\n        setGroups(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGroups();\r\n    }, []);\r\n\r\n    function selectGroup(id) {\r\n        const alreadySelected = groupsSelected.findIndex(item => item === id);\r\n\r\n        console.log(\"Selected\");\r\n\r\n        if (alreadySelected >= 0) {\r\n            const filteredItems = groupsSelected.filter(item => item !== id);\r\n            setGroupsSelected(filteredItems);\r\n        } else {\r\n            setGroupsSelected([...groupsSelected, id]);\r\n        }\r\n    }\r\n\r\n    function hack(letter) {\r\n        axios.post(`https://stophack.herokuapp.com/api/hack`, {\r\n            wordGroups: groupsSelected,\r\n            letter: letter\r\n        }).then(res => {\r\n            console.log(res);\r\n            const results = res.data.map((item) => {\r\n\r\n            });\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Container>\r\n                <Header>\r\n                    <Title>Montar jogo</Title>\r\n                    <Ionicons name=\"md-car\" size={32} color=\"#999\" />\r\n                </Header>\r\n                <Divider></Divider>\r\n                <ScrollGroups>\r\n                    {groups.map(group => (\r\n                        <Group check={groupsSelected.includes(group._id)} onPress={() => selectGroup(group._id)} key={group._id}><Text>{group.label}</Text></Group>\r\n                    ))}\r\n                </ScrollGroups>\r\n                <Divider></Divider>\r\n                <Form>\r\n                    <TextInput></TextInput>\r\n                    <Button onPress={() => hack('a')} title=\"Buscar\"></Button>\r\n                </Form>\r\n                <ScrollGroups>\r\n                    <Result><Label>a</Label><Word>b</Word></Result>\r\n                </ScrollGroups>\r\n            </Container>\r\n        </Wrapper>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}