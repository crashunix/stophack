{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\work\\\\stophack\\\\frontend-mobile\\\\src\\\\screens\\\\Home\\\\index.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport { MaterialCommunityIcons, AntDesign, Ionicons } from '@expo/vector-icons';\nimport { Wrapper, Header, Container, Logo, Nav, NavItem, NoConnection, Group, Title } from \"./styles\";\nimport logo from \"../../images/Netflix-logo2.png\";\nexport default function Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      groups = _useState2[0],\n      setGroups = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupsSelected = _useState4[0],\n      setGroupsSelected = _useState4[1];\n\n  function getGroups() {\n    var response, data;\n    return _regeneratorRuntime.async(function getGroups$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://stophack.herokuapp.com/api/wordgroups'));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            data = _context.sent;\n            setGroups(data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getGroups();\n  }, []);\n\n  function selectGroup(id) {\n    var alreadySelected = groupsSelected.findIndex(function (item) {\n      return item === id;\n    });\n    console.log(\"AAAAAAAAAAAAAAAAAA\");\n\n    if (alreadySelected >= 0) {\n      var filteredItems = groupsSelected.filter(function (item) {\n        return item !== id;\n      });\n      setGroupsSelected(filteredItems);\n    } else {\n      setGroupsSelected([].concat(_toConsumableArray(groupsSelected), [id]));\n    }\n  }\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, React.createElement(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Montar jogo\"), React.createElement(Ionicons, {\n    name: \"md-car\",\n    size: 32,\n    color: \"#999\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), groups.map(function (group) {\n    return React.createElement(Group, {\n      check: groupsSelected.includes(group._id),\n      onClick: function onClick() {\n        return selectGroup(group._id);\n      },\n      key: group._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 126\n      }\n    }, group.label));\n  })));\n}","map":{"version":3,"sources":["D:/work/stophack/frontend-mobile/src/screens/Home/index.js"],"names":["React","Component","useEffect","useState","MaterialCommunityIcons","AntDesign","Ionicons","Wrapper","Header","Container","Logo","Nav","NavItem","NoConnection","Group","Title","logo","Home","groups","setGroups","groupsSelected","setGroupsSelected","getGroups","fetch","response","json","data","selectGroup","id","alreadySelected","findIndex","item","console","log","filteredItems","filter","map","group","includes","_id","label"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;;;;AAEA,SAASC,sBAAT,EAAiCC,SAAjC,EAA4CC,QAA5C,QAA4D,oBAA5D;AAEA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,SAA1B,EAAqCC,IAArC,EAA2CC,GAA3C,EAAgDC,OAAhD,EAAyDC,YAAzD,EAAuEC,KAAvE,EAA8EC,KAA9E;AAEA,OAAOC,IAAP;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA,kBAECd,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,MAEpBe,MAFoB;AAAA,MAEZC,SAFY;;AAAA,mBAGiBhB,QAAQ,CAAC,EAAD,CAHzB;AAAA;AAAA,MAGpBiB,cAHoB;AAAA,MAGJC,iBAHI;;AAK3B,WAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC2BC,KAAK,CAAC,+CAAD,CADhC;;AAAA;AACUC,YAAAA,QADV;AAAA;AAAA,6CAEuBA,QAAQ,CAACC,IAAT,EAFvB;;AAAA;AAEUC,YAAAA,IAFV;AAGIP,YAAAA,SAAS,CAACO,IAAD,CAAT;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAxB,EAAAA,SAAS,CAAC,YAAM;AACZoB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASK,WAAT,CAAqBC,EAArB,EAAyB;AACrB,QAAMC,eAAe,GAAGT,cAAc,CAACU,SAAf,CAAyB,UAAAC,IAAI;AAAA,aAAIA,IAAI,KAAKH,EAAb;AAAA,KAA7B,CAAxB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AAEA,QAAIJ,eAAe,IAAI,CAAvB,EAA0B;AACtB,UAAMK,aAAa,GAAGd,cAAc,CAACe,MAAf,CAAsB,UAAAJ,IAAI;AAAA,eAAIA,IAAI,KAAKH,EAAb;AAAA,OAA1B,CAAtB;AACAP,MAAAA,iBAAiB,CAACa,aAAD,CAAjB;AACH,KAHD,MAGO;AACHb,MAAAA,iBAAiB,8BAAKD,cAAL,IAAqBQ,EAArB,GAAjB;AACH;AACJ;;AAED,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,QAAf;AAAwB,IAAA,IAAI,EAAE,EAA9B;AAAkC,IAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKKV,MAAM,CAACkB,GAAP,CAAW,UAAAC,KAAK;AAAA,WACb,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,cAAc,CAACkB,QAAf,CAAwBD,KAAK,CAACE,GAA9B,CAAd;AAAkD,MAAA,OAAO,EAAE;AAAA,eAAMZ,WAAW,CAACU,KAAK,CAACE,GAAP,CAAjB;AAAA,OAA3D;AAAyF,MAAA,GAAG,EAAEF,KAAK,CAACE,GAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,KAAK,CAACG,KAAb,CAAzG,CADa;AAAA,GAAhB,CALL,CADJ,CADJ;AAaH","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport { Text, View, CheckBox } from 'react-native';\r\nimport { MaterialCommunityIcons, AntDesign, Ionicons } from '@expo/vector-icons';\r\n\r\nimport { Wrapper, Header, Container, Logo, Nav, NavItem, NoConnection, Group, Title } from './styles';\r\n\r\nimport logo from '../../images/Netflix-logo2.png';\r\n\r\nexport default function Home() {\r\n\r\n    const [groups, setGroups] = useState([]);\r\n    const [groupsSelected, setGroupsSelected] = useState([]);\r\n\r\n    async function getGroups() {\r\n        const response = await fetch('https://stophack.herokuapp.com/api/wordgroups');\r\n        const data = await response.json();\r\n        setGroups(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGroups();\r\n    }, []);\r\n\r\n    function selectGroup(id) {\r\n        const alreadySelected = groupsSelected.findIndex(item => item === id);\r\n\r\n        console.log(\"AAAAAAAAAAAAAAAAAA\");\r\n\r\n        if (alreadySelected >= 0) {\r\n            const filteredItems = groupsSelected.filter(item => item !== id);\r\n            setGroupsSelected(filteredItems);\r\n        } else {\r\n            setGroupsSelected([...groupsSelected, id]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Container>\r\n                <Header>\r\n                    <Title>Montar jogo</Title>\r\n                    <Ionicons name=\"md-car\" size={32} color=\"#999\" />\r\n                </Header>\r\n                {groups.map(group => (\r\n                    <Group check={groupsSelected.includes(group._id)} onClick={() => selectGroup(group._id)} key={group._id}><Text>{group.label}</Text></Group>\r\n                ))}\r\n            </Container>\r\n        </Wrapper>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}